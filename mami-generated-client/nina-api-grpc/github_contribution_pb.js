// source: nina-api-grpc/github_contribution.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
goog.exportSymbol('proto.nina.Contribution', null, global);
goog.exportSymbol('proto.nina.ContributionStatistics', null, global);
goog.exportSymbol('proto.nina.ContributionSum', null, global);
goog.exportSymbol('proto.nina.DeleteGithubContributionRequest', null, global);
goog.exportSymbol('proto.nina.GetGithubContributionResponse', null, global);
goog.exportSymbol('proto.nina.GetStatisticsRequest', null, global);
goog.exportSymbol('proto.nina.GetStatisticsResponse', null, global);
goog.exportSymbol('proto.nina.PostGithubContributionRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nina.Contribution = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nina.Contribution, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nina.Contribution.displayName = 'proto.nina.Contribution';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nina.GetGithubContributionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nina.GetGithubContributionResponse.repeatedFields_, null);
};
goog.inherits(proto.nina.GetGithubContributionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nina.GetGithubContributionResponse.displayName = 'proto.nina.GetGithubContributionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nina.PostGithubContributionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nina.PostGithubContributionRequest.repeatedFields_, null);
};
goog.inherits(proto.nina.PostGithubContributionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nina.PostGithubContributionRequest.displayName = 'proto.nina.PostGithubContributionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nina.DeleteGithubContributionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nina.DeleteGithubContributionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nina.DeleteGithubContributionRequest.displayName = 'proto.nina.DeleteGithubContributionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nina.ContributionSum = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nina.ContributionSum, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nina.ContributionSum.displayName = 'proto.nina.ContributionSum';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nina.ContributionStatistics = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nina.ContributionStatistics.repeatedFields_, null);
};
goog.inherits(proto.nina.ContributionStatistics, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nina.ContributionStatistics.displayName = 'proto.nina.ContributionStatistics';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nina.GetStatisticsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nina.GetStatisticsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nina.GetStatisticsRequest.displayName = 'proto.nina.GetStatisticsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nina.GetStatisticsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nina.GetStatisticsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nina.GetStatisticsResponse.displayName = 'proto.nina.GetStatisticsResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nina.Contribution.prototype.toObject = function(opt_includeInstance) {
  return proto.nina.Contribution.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nina.Contribution} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nina.Contribution.toObject = function(includeInstance, msg) {
  var f, obj = {
    contributedat: jspb.Message.getFieldWithDefault(msg, 1, ""),
    organization: jspb.Message.getFieldWithDefault(msg, 2, ""),
    repository: jspb.Message.getFieldWithDefault(msg, 3, ""),
    user: jspb.Message.getFieldWithDefault(msg, 4, ""),
    status: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nina.Contribution}
 */
proto.nina.Contribution.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nina.Contribution;
  return proto.nina.Contribution.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nina.Contribution} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nina.Contribution}
 */
proto.nina.Contribution.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContributedat(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRepository(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUser(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nina.Contribution.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nina.Contribution.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nina.Contribution} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nina.Contribution.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContributedat();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRepository();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUser();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string contributedAt = 1;
 * @return {string}
 */
proto.nina.Contribution.prototype.getContributedat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nina.Contribution} returns this
 */
proto.nina.Contribution.prototype.setContributedat = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string organization = 2;
 * @return {string}
 */
proto.nina.Contribution.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nina.Contribution} returns this
 */
proto.nina.Contribution.prototype.setOrganization = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string repository = 3;
 * @return {string}
 */
proto.nina.Contribution.prototype.getRepository = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.nina.Contribution} returns this
 */
proto.nina.Contribution.prototype.setRepository = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string user = 4;
 * @return {string}
 */
proto.nina.Contribution.prototype.getUser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.nina.Contribution} returns this
 */
proto.nina.Contribution.prototype.setUser = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string status = 5;
 * @return {string}
 */
proto.nina.Contribution.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.nina.Contribution} returns this
 */
proto.nina.Contribution.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nina.GetGithubContributionResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nina.GetGithubContributionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.nina.GetGithubContributionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nina.GetGithubContributionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nina.GetGithubContributionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    contributionsList: jspb.Message.toObjectList(msg.getContributionsList(),
    proto.nina.Contribution.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nina.GetGithubContributionResponse}
 */
proto.nina.GetGithubContributionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nina.GetGithubContributionResponse;
  return proto.nina.GetGithubContributionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nina.GetGithubContributionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nina.GetGithubContributionResponse}
 */
proto.nina.GetGithubContributionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nina.Contribution;
      reader.readMessage(value,proto.nina.Contribution.deserializeBinaryFromReader);
      msg.addContributions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nina.GetGithubContributionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nina.GetGithubContributionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nina.GetGithubContributionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nina.GetGithubContributionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContributionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.nina.Contribution.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Contribution contributions = 1;
 * @return {!Array<!proto.nina.Contribution>}
 */
proto.nina.GetGithubContributionResponse.prototype.getContributionsList = function() {
  return /** @type{!Array<!proto.nina.Contribution>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.nina.Contribution, 1));
};


/**
 * @param {!Array<!proto.nina.Contribution>} value
 * @return {!proto.nina.GetGithubContributionResponse} returns this
*/
proto.nina.GetGithubContributionResponse.prototype.setContributionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.nina.Contribution=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nina.Contribution}
 */
proto.nina.GetGithubContributionResponse.prototype.addContributions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.nina.Contribution, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nina.GetGithubContributionResponse} returns this
 */
proto.nina.GetGithubContributionResponse.prototype.clearContributionsList = function() {
  return this.setContributionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nina.PostGithubContributionRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nina.PostGithubContributionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nina.PostGithubContributionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nina.PostGithubContributionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nina.PostGithubContributionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    contributionsList: jspb.Message.toObjectList(msg.getContributionsList(),
    proto.nina.Contribution.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nina.PostGithubContributionRequest}
 */
proto.nina.PostGithubContributionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nina.PostGithubContributionRequest;
  return proto.nina.PostGithubContributionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nina.PostGithubContributionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nina.PostGithubContributionRequest}
 */
proto.nina.PostGithubContributionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nina.Contribution;
      reader.readMessage(value,proto.nina.Contribution.deserializeBinaryFromReader);
      msg.addContributions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nina.PostGithubContributionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nina.PostGithubContributionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nina.PostGithubContributionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nina.PostGithubContributionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContributionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.nina.Contribution.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Contribution contributions = 1;
 * @return {!Array<!proto.nina.Contribution>}
 */
proto.nina.PostGithubContributionRequest.prototype.getContributionsList = function() {
  return /** @type{!Array<!proto.nina.Contribution>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.nina.Contribution, 1));
};


/**
 * @param {!Array<!proto.nina.Contribution>} value
 * @return {!proto.nina.PostGithubContributionRequest} returns this
*/
proto.nina.PostGithubContributionRequest.prototype.setContributionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.nina.Contribution=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nina.Contribution}
 */
proto.nina.PostGithubContributionRequest.prototype.addContributions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.nina.Contribution, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nina.PostGithubContributionRequest} returns this
 */
proto.nina.PostGithubContributionRequest.prototype.clearContributionsList = function() {
  return this.setContributionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nina.DeleteGithubContributionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nina.DeleteGithubContributionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nina.DeleteGithubContributionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nina.DeleteGithubContributionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    startat: jspb.Message.getFieldWithDefault(msg, 1, ""),
    endat: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nina.DeleteGithubContributionRequest}
 */
proto.nina.DeleteGithubContributionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nina.DeleteGithubContributionRequest;
  return proto.nina.DeleteGithubContributionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nina.DeleteGithubContributionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nina.DeleteGithubContributionRequest}
 */
proto.nina.DeleteGithubContributionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartat(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nina.DeleteGithubContributionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nina.DeleteGithubContributionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nina.DeleteGithubContributionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nina.DeleteGithubContributionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartat();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEndat();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string startAt = 1;
 * @return {string}
 */
proto.nina.DeleteGithubContributionRequest.prototype.getStartat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nina.DeleteGithubContributionRequest} returns this
 */
proto.nina.DeleteGithubContributionRequest.prototype.setStartat = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string endAt = 2;
 * @return {string}
 */
proto.nina.DeleteGithubContributionRequest.prototype.getEndat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nina.DeleteGithubContributionRequest} returns this
 */
proto.nina.DeleteGithubContributionRequest.prototype.setEndat = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nina.ContributionSum.prototype.toObject = function(opt_includeInstance) {
  return proto.nina.ContributionSum.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nina.ContributionSum} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nina.ContributionSum.toObject = function(includeInstance, msg) {
  var f, obj = {
    date: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sum: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nina.ContributionSum}
 */
proto.nina.ContributionSum.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nina.ContributionSum;
  return proto.nina.ContributionSum.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nina.ContributionSum} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nina.ContributionSum}
 */
proto.nina.ContributionSum.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDate(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nina.ContributionSum.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nina.ContributionSum.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nina.ContributionSum} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nina.ContributionSum.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDate();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSum();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string date = 1;
 * @return {string}
 */
proto.nina.ContributionSum.prototype.getDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nina.ContributionSum} returns this
 */
proto.nina.ContributionSum.prototype.setDate = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 sum = 2;
 * @return {number}
 */
proto.nina.ContributionSum.prototype.getSum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.nina.ContributionSum} returns this
 */
proto.nina.ContributionSum.prototype.setSum = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nina.ContributionStatistics.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nina.ContributionStatistics.prototype.toObject = function(opt_includeInstance) {
  return proto.nina.ContributionStatistics.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nina.ContributionStatistics} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nina.ContributionStatistics.toObject = function(includeInstance, msg) {
  var f, obj = {
    sum: jspb.Message.getFieldWithDefault(msg, 1, 0),
    contributionsumlistList: jspb.Message.toObjectList(msg.getContributionsumlistList(),
    proto.nina.ContributionSum.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nina.ContributionStatistics}
 */
proto.nina.ContributionStatistics.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nina.ContributionStatistics;
  return proto.nina.ContributionStatistics.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nina.ContributionStatistics} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nina.ContributionStatistics}
 */
proto.nina.ContributionStatistics.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSum(value);
      break;
    case 2:
      var value = new proto.nina.ContributionSum;
      reader.readMessage(value,proto.nina.ContributionSum.deserializeBinaryFromReader);
      msg.addContributionsumlist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nina.ContributionStatistics.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nina.ContributionStatistics.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nina.ContributionStatistics} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nina.ContributionStatistics.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSum();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getContributionsumlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.nina.ContributionSum.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 sum = 1;
 * @return {number}
 */
proto.nina.ContributionStatistics.prototype.getSum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.nina.ContributionStatistics} returns this
 */
proto.nina.ContributionStatistics.prototype.setSum = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated ContributionSum contributionSumList = 2;
 * @return {!Array<!proto.nina.ContributionSum>}
 */
proto.nina.ContributionStatistics.prototype.getContributionsumlistList = function() {
  return /** @type{!Array<!proto.nina.ContributionSum>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.nina.ContributionSum, 2));
};


/**
 * @param {!Array<!proto.nina.ContributionSum>} value
 * @return {!proto.nina.ContributionStatistics} returns this
*/
proto.nina.ContributionStatistics.prototype.setContributionsumlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.nina.ContributionSum=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nina.ContributionSum}
 */
proto.nina.ContributionStatistics.prototype.addContributionsumlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.nina.ContributionSum, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nina.ContributionStatistics} returns this
 */
proto.nina.ContributionStatistics.prototype.clearContributionsumlistList = function() {
  return this.setContributionsumlistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nina.GetStatisticsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nina.GetStatisticsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nina.GetStatisticsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nina.GetStatisticsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    user: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nina.GetStatisticsRequest}
 */
proto.nina.GetStatisticsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nina.GetStatisticsRequest;
  return proto.nina.GetStatisticsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nina.GetStatisticsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nina.GetStatisticsRequest}
 */
proto.nina.GetStatisticsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUser(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nina.GetStatisticsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nina.GetStatisticsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nina.GetStatisticsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nina.GetStatisticsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUser();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string user = 1;
 * @return {string}
 */
proto.nina.GetStatisticsRequest.prototype.getUser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nina.GetStatisticsRequest} returns this
 */
proto.nina.GetStatisticsRequest.prototype.setUser = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nina.GetStatisticsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.nina.GetStatisticsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nina.GetStatisticsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nina.GetStatisticsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    createdpullrequeststatistics: (f = msg.getCreatedpullrequeststatistics()) && proto.nina.ContributionStatistics.toObject(includeInstance, f),
    commentedstatistics: (f = msg.getCommentedstatistics()) && proto.nina.ContributionStatistics.toObject(includeInstance, f),
    approvedstatistics: (f = msg.getApprovedstatistics()) && proto.nina.ContributionStatistics.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nina.GetStatisticsResponse}
 */
proto.nina.GetStatisticsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nina.GetStatisticsResponse;
  return proto.nina.GetStatisticsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nina.GetStatisticsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nina.GetStatisticsResponse}
 */
proto.nina.GetStatisticsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nina.ContributionStatistics;
      reader.readMessage(value,proto.nina.ContributionStatistics.deserializeBinaryFromReader);
      msg.setCreatedpullrequeststatistics(value);
      break;
    case 2:
      var value = new proto.nina.ContributionStatistics;
      reader.readMessage(value,proto.nina.ContributionStatistics.deserializeBinaryFromReader);
      msg.setCommentedstatistics(value);
      break;
    case 3:
      var value = new proto.nina.ContributionStatistics;
      reader.readMessage(value,proto.nina.ContributionStatistics.deserializeBinaryFromReader);
      msg.setApprovedstatistics(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nina.GetStatisticsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nina.GetStatisticsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nina.GetStatisticsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nina.GetStatisticsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCreatedpullrequeststatistics();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.nina.ContributionStatistics.serializeBinaryToWriter
    );
  }
  f = message.getCommentedstatistics();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.nina.ContributionStatistics.serializeBinaryToWriter
    );
  }
  f = message.getApprovedstatistics();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.nina.ContributionStatistics.serializeBinaryToWriter
    );
  }
};


/**
 * optional ContributionStatistics createdPullRequestStatistics = 1;
 * @return {?proto.nina.ContributionStatistics}
 */
proto.nina.GetStatisticsResponse.prototype.getCreatedpullrequeststatistics = function() {
  return /** @type{?proto.nina.ContributionStatistics} */ (
    jspb.Message.getWrapperField(this, proto.nina.ContributionStatistics, 1));
};


/**
 * @param {?proto.nina.ContributionStatistics|undefined} value
 * @return {!proto.nina.GetStatisticsResponse} returns this
*/
proto.nina.GetStatisticsResponse.prototype.setCreatedpullrequeststatistics = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nina.GetStatisticsResponse} returns this
 */
proto.nina.GetStatisticsResponse.prototype.clearCreatedpullrequeststatistics = function() {
  return this.setCreatedpullrequeststatistics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nina.GetStatisticsResponse.prototype.hasCreatedpullrequeststatistics = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ContributionStatistics commentedStatistics = 2;
 * @return {?proto.nina.ContributionStatistics}
 */
proto.nina.GetStatisticsResponse.prototype.getCommentedstatistics = function() {
  return /** @type{?proto.nina.ContributionStatistics} */ (
    jspb.Message.getWrapperField(this, proto.nina.ContributionStatistics, 2));
};


/**
 * @param {?proto.nina.ContributionStatistics|undefined} value
 * @return {!proto.nina.GetStatisticsResponse} returns this
*/
proto.nina.GetStatisticsResponse.prototype.setCommentedstatistics = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nina.GetStatisticsResponse} returns this
 */
proto.nina.GetStatisticsResponse.prototype.clearCommentedstatistics = function() {
  return this.setCommentedstatistics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nina.GetStatisticsResponse.prototype.hasCommentedstatistics = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ContributionStatistics approvedStatistics = 3;
 * @return {?proto.nina.ContributionStatistics}
 */
proto.nina.GetStatisticsResponse.prototype.getApprovedstatistics = function() {
  return /** @type{?proto.nina.ContributionStatistics} */ (
    jspb.Message.getWrapperField(this, proto.nina.ContributionStatistics, 3));
};


/**
 * @param {?proto.nina.ContributionStatistics|undefined} value
 * @return {!proto.nina.GetStatisticsResponse} returns this
*/
proto.nina.GetStatisticsResponse.prototype.setApprovedstatistics = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nina.GetStatisticsResponse} returns this
 */
proto.nina.GetStatisticsResponse.prototype.clearApprovedstatistics = function() {
  return this.setApprovedstatistics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nina.GetStatisticsResponse.prototype.hasApprovedstatistics = function() {
  return jspb.Message.getField(this, 3) != null;
};


goog.object.extend(exports, proto.nina);
